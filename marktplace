(async function () {
    // Função para esperar alguns milissegundos
    function delay(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    // Função para clicar no botão "Show More" até que ele desapareça
    async function loadAllItems() {
        let showMoreButton;

        // Continuar tentando até que o botão desapareça
        while (true) {
            showMoreButton = document.querySelector('.chakra-button.css-1yovtmp'); // Atualizado com a nova classe do botão "Show More"
            
            // Se o botão não estiver visível ou não existir, saímos
            if (!showMoreButton || !showMoreButton.offsetParent) {
                console.log('Botão "Show More" não encontrado ou não está visível.');
                break;
            }

            // Clica no botão se encontrado
            showMoreButton.click();
            console.log('Clicando no botão "Show More"...');
            await delay(4000); // Aguarda 4 segundos para carregar mais itens
        }
    }

    // Chamar a função para carregar todos os itens
    await loadAllItems();

    // Coletar todos os elementos de itens da página
    const itemElements = document.querySelectorAll('.chakra-linkbox'); // Seleciona os cards dos itens
    const items = [];

    // Função para formatar os preços no formato correto (milhar com ponto, decimal com vírgula)
    function formatPrice(price) {
        let numericPrice = price.replace(/[^0-9.]/g, ''); // Remove qualquer caractere que não seja número ou ponto
        let floatPrice = parseFloat(numericPrice); // Converte para número
        return floatPrice.toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
    }

    // Função para converter o valor formatado para número para a ordenação
    function parsePriceToNumber(price) {
        return parseFloat(price.replace(/\./g, '').replace(',', '.')); // Remove pontos e converte vírgula em ponto
    }

    // Percorrer cada item para extrair os dados
    itemElements.forEach(itemElement => {
        const itemName = itemElement.querySelector('h2.chakra-heading').innerText; // Nome do item
        const rarity = itemElement.querySelector('.chakra-text.css-9zqeo9').innerText; // Raridade do item
        const priceElement = itemElement.querySelector('.chakra-text.css-j6dla4'); // Preço do item
        let price = priceElement ? priceElement.innerText.replace('$', '') : 'N/A'; // Remove o símbolo $ e pega o valor

        price = formatPrice(price); // Formata o preço corretamente

        items.push([itemName, price, rarity]); // Adiciona em formato de array, na ordem desejada
    });

    // Ordenar os itens pelo preço do mais alto para o mais baixo
    items.sort((a, b) => parsePriceToNumber(b[1]) - parsePriceToNumber(a[1]));

    // Gerar conteúdo para a área de transferência com tabulação, sem cabeçalho
    let clipboardContent = ''; // Sem cabeçalho
    items.forEach(item => {
        clipboardContent += `${item[0]}\t${item[1]}\t${item[2]}\n`; // Dados separados por tabulação
    });

    // Criar um elemento de texto temporário para copiar o conteúdo
    const tempTextArea = document.createElement('textarea');
    tempTextArea.value = clipboardContent;
    document.body.appendChild(tempTextArea);

    // Selecionar o conteúdo e copiar para a área de transferência
    tempTextArea.select();
    document.execCommand('copy');

    // Remover o elemento temporário
    document.body.removeChild(tempTextArea);

    console.log('Todos os itens foram carregados e copiados para a área de transferência. Cole diretamente na planilha.');
})();
